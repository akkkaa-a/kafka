server:
  port: ${SERVER_PORT:8080}

spring:
  application:
    name: kafka-service
    public-prefix-path: ${KAFKA_SERVICE_PUBLIC_URL_PREFIX:/api/kafka}
    private-prefix-path: ${KAFKA_SERVICE_PRIVATE_URL_PREFIX:/kafka}
  datasource:
    url: ${KAFKA_DB_JDBC_URL:jdbc:postgresql://localhost:5432/kafka?currentSchema=kafka&user=postgres&password=postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        jdbc:
          lob.non_contextual_creation: true
          batch_size: 30
        order_inserts: true
    open-in-view: false
  liquibase:
    enabled: ${CORE_QUESTIONNAIRE_SERVICE_LIQUIBASE_ENABLED:false}
    change-log: classpath:db/changelog/master.xml
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      auto-startup: ${KAFKA_CONSUMER_AUTO_START:true}
      group-id: ${CONSUMER_GROUP_ID:kafka}
      auto-offset-reset: ${CONSUMER_AUTO_OFFSET_RESET:latest}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      enable-auto-commit: false
      properties:
        spring.json.trusted.packages:
          - "ru.val.kafka.dto"
    listener:
      ack-mode: MANUAL_IMMEDIATE
    topic:
      name: ${KAFKA_TOPIC_NAME:user}